# Generated by Django 4.1.5 on 2023-03-29 20:11

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DepositPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('found_date', models.DateField(blank=True, null=True)),
                ('lost_date', models.DateField(blank=True, null=True)),
                ('lost_location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('found_location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Verified', 'Verified'), ('Pending', 'Pending'), ('Rejected', 'Rejected')], default='Pending', max_length=15)),
                ('first_image', models.ImageField(null=True, upload_to='item_images/')),
                ('second_image', models.ImageField(null=True, upload_to='item_images/')),
            ],
        ),
        migrations.CreateModel(
            name='ItemQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=200)),
                ('is_for_reclamation', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Reclamation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.CharField(max_length=200)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.item')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.itemquestion')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ItemDeposit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('deposit_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.depositpoint')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.item')),
            ],
        ),
        migrations.CreateModel(
            name='ItemCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('questions', models.ManyToManyField(to='core.itemquestion')),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='categories',
            field=models.ManyToManyField(to='core.itemcategory'),
        ),
        migrations.AddField(
            model_name='item',
            name='founder',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='founder', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='item',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owner', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='DepositPointAdministration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('deposit_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.depositpoint')),
            ],
        ),
        migrations.AddField(
            model_name='depositpoint',
            name='admins',
            field=models.ManyToManyField(through='core.DepositPointAdministration', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='depositpoint',
            name='items',
            field=models.ManyToManyField(through='core.ItemDeposit', to='core.item'),
        ),
        migrations.AddConstraint(
            model_name='reclamation',
            constraint=models.UniqueConstraint(fields=('user', 'item', 'question'), name='pk_reclamation'),
        ),
        migrations.AddConstraint(
            model_name='itemdeposit',
            constraint=models.UniqueConstraint(fields=('deposit_point', 'item'), name='pk_deposit'),
        ),
    ]
